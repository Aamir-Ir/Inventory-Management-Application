# Create a cursor
cursor = conn.cursor()

# Create the FINISHEDPRODUCT table
cursor.execute('''
    CREATE TABLE IF NOT EXISTS FINISHEDPRODUCT (
        CODE NVARCHAR(50) PRIMARY KEY,
        PRODUCTNAME NVARCHAR(255) NOT NULL UNIQUE,
        COST FLOAT NOT NULL,
        UNIT NVARCHAR(50) NOT NULL,
        QUANTITY INT NOT NULL,
        PRICE FLOAT NOT NULL,
        REMOVED CHAR(1) NOT NULL
    )
''')

# Create the RAWMATERIALS table
cursor.execute('''
    CREATE TABLE IF NOT EXISTS RAWMATERIALS (
        MATERIALID INT PRIMARY KEY IDENTITY(1,1),
        NAME NVARCHAR(255) NOT NULL UNIQUE,
        COST FLOAT NOT NULL,
        UNITS NVARCHAR(50) NOT NULL,
        QUANTITY INT NOT NULL,
        ASSOCIATED_CODES NVARCHAR(MAX) NOT NULL,
        REMOVED CHAR(1) NOT NULL
    )
''')

# Create the PACKAGINGMATERIALS table
cursor.execute('''
    CREATE TABLE IF NOT EXISTS PACKAGINGMATERIALS (
        MATERIALID INT PRIMARY KEY IDENTITY(1,1),
        NAME NVARCHAR(255) NOT NULL UNIQUE,
        COST FLOAT NOT NULL,
        QUANTITY INT NOT NULL,
        ASSOCIATED_CODES NVARCHAR(MAX) NOT NULL,
        REMOVED CHAR(1) NOT NULL
    )
''')

# Create the PRODUCTMATERIALASSOCIATION table
cursor.execute('''
    CREATE TABLE IF NOT EXISTS PRODUCTMATERIALASSOCIATION (
        ASSOCIATIONID INT PRIMARY KEY IDENTITY(1,1),
        MATERIALID INT NOT NULL,
        MATERIALTYPE NVARCHAR(50) NOT NULL,
        CODE NVARCHAR(50) NOT NULL,
        FOREIGN KEY (MATERIALID) REFERENCES RAWMATERIALS (MATERIALID),
        FOREIGN KEY (MATERIALID) REFERENCES PACKAGINGMATERIALS (MATERIALID),
        FOREIGN KEY (CODE) REFERENCES FinishedProduct (CODE)
    )
''')


# Create the USERS table
cursor.execute('''
    CREATE TABLE IF NOT EXISTS USERS (
        ID INT PRIMARY KEY IDENTITY(1,1),
        USERNAME NVARCHAR(255) NOT NULL UNIQUE,
        PASSWORD NVARCHAR(255) NOT NULL UNIQUE,
        PRIVEILEGE NOT NULL NVARCHAR(255),
        REMOVED CHAR(1) NOT NULL
    )
''')

# Create the UNITS table
cursor.execute('''
    CREATE TABLE IF NOT EXISTS UNITS_RM (
        UNITID INT PRIMARY KEY IDENTITY(1,1),
        NAME NVARCHAR(255) NOT NULL UNIQUE,
        REMOVED CHAR(1) NOT NULL
    )
''')

# Create the UNITS table
cursor.execute('''
    CREATE TABLE IF NOT EXISTS UNITS_PM (
        UNITID INT PRIMARY KEY IDENTITY(1,1),
        NAME NVARCHAR(255) NOT NULL UNIQUE,
        REMOVED CHAR(1) NOT NULL
    )
''')

# Create the UNITS table
cursor.execute('''
    CREATE TABLE IF NOT EXISTS UNITS_FP (
        UNITID INT PRIMARY KEY IDENTITY(1,1),
        NAME NVARCHAR(255) NOT NULL UNIQUE,
        REMOVED CHAR(1) NOT NULL
    )
''')


# Commit changes and close the connection
conn.commit()
conn.close()


// Tables for SQL Express



CREATE TABLE FINISHEDPRODUCT (
    CODE NVARCHAR(50) PRIMARY KEY,
    PRODUCTNAME NVARCHAR(255) NOT NULL UNIQUE,
    COST FLOAT NOT NULL,
    UNIT NVARCHAR(50) NOT NULL,
    QUANTITY INT NOT NULL,
    PRICE FLOAT NOT NULL,
    REMOVED CHAR(1) NOT NULL
)

CREATE TABLE RAWMATERIALS (
    MATERIALID INT PRIMARY KEY IDENTITY(1,1),
    NAME NVARCHAR(255) NOT NULL UNIQUE,
    COST FLOAT NOT NULL,
    UNITS NVARCHAR(50) NOT NULL,
    QUANTITY INT NOT NULL,
    ASSOCIATED_CODES NVARCHAR(MAX) NOT NULL,
    REMOVED CHAR(1) NOT NULL
)

CREATE TABLE PACKAGINGMATERIALS (
    MATERIALID INT PRIMARY KEY IDENTITY(1,1),
    NAME NVARCHAR(255) NOT NULL UNIQUE,
    COST FLOAT NOT NULL,
    QUANTITY INT NOT NULL,
    ASSOCIATED_CODES NVARCHAR(MAX) NOT NULL,
    REMOVED CHAR(1) NOT NULL
)

CREATE TABLE RAWMATERIALASSOCIATION (
    ASSOCIATIONID INT PRIMARY KEY IDENTITY(1,1),
    RAWMATERIALID INT NOT NULL,
    CODE NVARCHAR(50) NOT NULL,
    FOREIGN KEY (RAWMATERIALID) REFERENCES RAWMATERIALS (MATERIALID),
    FOREIGN KEY (CODE) REFERENCES FinishedProduct (CODE)
);

CREATE TABLE PACKAGINGMATERIALASSOCIATION (
    ASSOCIATIONID INT PRIMARY KEY IDENTITY(1,1),
    PACKAGINGMATERIALID INT NOT NULL,
    CODE NVARCHAR(50) NOT NULL,
    FOREIGN KEY (PACKAGINGMATERIALID) REFERENCES PACKAGINGMATERIALS (MATERIALID),
    FOREIGN KEY (CODE) REFERENCES FinishedProduct (CODE)
);


CREATE TABLE USERS (
    ID INT PRIMARY KEY IDENTITY(1,1),
    USERNAME NVARCHAR(255) NOT NULL UNIQUE,
    PASSWORD NVARCHAR(255) NOT NULL,
    PRIVEILEGE NVARCHAR(255) NOT NULL,
    REMOVED CHAR(1) NOT NULL
)

CREATE TABLE UNITS_RM (
    UNITID INT PRIMARY KEY IDENTITY(1,1),
    NAME NVARCHAR(255) NOT NULL UNIQUE,
    REMOVED CHAR(1) NOT NULL
)


CREATE TABLE UNITS_FP (
    UNITID INT PRIMARY KEY IDENTITY(1,1),
    NAME NVARCHAR(255) NOT NULL UNIQUE,
    REMOVED CHAR(1) NOT NULL
)

CREATE TABLE CUSTOMERS (
    CUSTOMERID INT PRIMARY KEY IDENTITY(1,1),
    CONTACT_NAME NVARCHAR(255) NOT NULL UNIQUE,
    COMPANY_NAME NVARCHAR(255) NOT NULL UNIQUE,
    PHONE_NUMBER NVARCHAR(255) NOT NULL UNIQUE,
    EMAIL_ADDRESS NVARCHAR(255) NOT NULL UNIQUE,
    SHIPPING_ADDRESS NVARCHAR(255) NOT NULL,
    REMOVED CHAR(1) NOT NULL
)


CREATE TABLE WORK_ORDERS_INFO (
    WORK_ORDER_ID INT PRIMARY KEY IDENTITY(1,1),
    CONTACT_NAME NVARCHAR(255) NOT NULL,
    CREATED_ON NVARCHAR(255) NOT NULL,
    DUE_BY NVARCHAR(255) NOT NULL,
    STATUS NVARCHAR(255) NOT NULL
)

CREATE TABLE AUDIT_TRAIL (
    AUDIT_ID INT PRIMARY KEY IDENTITY(1,1),
    USERNAME NVARCHAR(255) NOT NULL,
    TYPE NVARCHAR(255) NOT NULL,
    CHANGE NVARCHAR(255) NOT NULL,
    CHANGED_ON NVARCHAR(255) NOT NULL
)



